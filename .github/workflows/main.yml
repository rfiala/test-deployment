name: Zip and Upload to S3

on:
  push:
    branches:
      - main  # Change this to the branch you want to trigger the workflow

jobs:
  zip-and-upload:
    runs-on: ubuntu-latest

    outputs:
      test_url: ${{ steps.set_archive_url.outputs.test }}

    steps:
      # Step 1: Check out the code from the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set variable
        id: set_archive_url
        uses: ./.github/actions/test-job

      # Step 2: Generate a unique version tag
      - name: Generate version tag
        id: version_tag
        run: |
          # Get the short commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)
          # Use GitHub Actions run number as part of the version
          VERSION_TAG="v1.${{ github.run_number }}-${COMMIT_HASH}"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "Generated version tag: $VERSION_TAG"

      # Step 4: Compress the copied directory with tar
      - name: Compress folder with tar
        run: |
          mkdir -p $GITHUB_WORKSPACE/temp_dir
          tar -czvf $GITHUB_WORKSPACE/temp_dir/repo_archive_${{ env.VERSION_TAG }}.tar.gz -C $GITHUB_WORKSPACE \
            --exclude="./temp_dir" \
            . > /dev/null 

      # Step 5: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your S3 bucket region

      # Step 6: Upload to S3
      - name: Upload to S3
        run: |
          aws s3 cp $GITHUB_WORKSPACE/temp_dir/repo_archive_${{ env.VERSION_TAG }}.tar.gz s3://ug-webapp-deployment-history/repo_archive_${{ env.VERSION_TAG }}.tar.gz

      - name: Print Variable
        shell: bash
        run: | 
          echo ${{ steps.set_archive_url.outputs.TEST_URL }}

  echo-var:
    runs-on: ubuntu-latest
    needs: [zip-and-upload]

    steps:
      - name: echo send-to-s3.outputs.test_url
        shell: bash
        run: echo ${{ needs.zip-and-upload.outputs.TEST_URL }}